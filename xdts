--// Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera

--// GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ExampleGUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = game:GetService("CoreGui")

-- Outer frame
local outerFrame = Instance.new("Frame")
outerFrame.Size = UDim2.new(0.6, 0, 0.7, 0)
outerFrame.Position = UDim2.new(0.15, 0, 0.15, 0)
outerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
outerFrame.BorderSizePixel = 0
outerFrame.Parent = screenGui

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.12, 0, 0.05, 0)
toggleButton.Position = UDim2.new(0.44, 0, 0.85, 0)
toggleButton.Text = "Hide Frame"
toggleButton.TextColor3 = Color3.fromRGB(255,255,255)
toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggleButton.Parent = screenGui

toggleButton.MouseButton1Click:Connect(function()
    outerFrame.Visible = not outerFrame.Visible
    toggleButton.Text = outerFrame.Visible and "Hide Frame" or "Show Frame"
end)

-- Drag functionality
local dragging = false
local dragStart = Vector2.new()
local startPos = UDim2.new()

toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = toggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        local screenSize = toggleButton.Parent.AbsoluteSize
        toggleButton.Position = UDim2.new(
            startPos.X.Scale + delta.X / screenSize.X,
            0,
            startPos.Y.Scale + delta.Y / screenSize.Y,
            0
        )
    end
end)

-- Helper function to create scrolling frames + layouts
local function createScrollFrame(parent, size, pos)
    local frame = Instance.new("ScrollingFrame")
    frame.Size = size
    frame.Position = pos
    frame.CanvasSize = UDim2.new(0,0,0,0)
    frame.ScrollBarThickness = 8
    frame.BackgroundColor3 = Color3.fromRGB(35,35,35)
    frame.Parent = parent

    local layout = Instance.new("UIListLayout")
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0,2)
    layout.Parent = frame

    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        frame.CanvasSize = UDim2.new(0,0,0,layout.AbsoluteContentSize.Y)
    end)

    return frame
end

-- Helper function to create buttons
local function createButton(parent, text, posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.15,0,0.08,0)
    btn.Position = UDim2.new(0.3,0,posY,0)
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.BackgroundColor3 = Color3.fromRGB(80,80,80)
    btn.Parent = parent
    return btn
end

-- Create Items Frame
local itemsFrame = Instance.new("Frame")
itemsFrame.Size = UDim2.new(0.8, 0, 0.9, 0)
itemsFrame.Position = UDim2.new(0.199, 0.05, 0.1, 0)
itemsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
itemsFrame.Parent = outerFrame

-- Items Frame UI
local selectedLabel = Instance.new("TextLabel")
selectedLabel.Size = UDim2.new(0.38,0,0.08,0)
selectedLabel.Position = UDim2.new(0.45,0,0.05,0)
selectedLabel.Text = "Selected Item: None"
selectedLabel.TextColor3 = Color3.fromRGB(255,255,255)
selectedLabel.BackgroundColor3 = Color3.fromRGB(50,50,50)
selectedLabel.TextScaled = true
selectedLabel.TextWrapped = true
selectedLabel.Parent = itemsFrame

local scrollFrameLeft = createScrollFrame(itemsFrame, UDim2.new(0.2,0,0.7,0), UDim2.new(0.48,0,0.15,0))
local scrollFrameRight = createScrollFrame(itemsFrame, UDim2.new(0.3,0,0.7,0), UDim2.new(0.7,0,0.15,0))

local bringAllButton = createButton(itemsFrame,"Bring All",0.15)
local bringOneButton = createButton(itemsFrame,"Bring One",0.25)
local bringAllItemButton = createButton(itemsFrame,"Bring All of Item",0.35)
local mouseSphereButton = createButton(itemsFrame,"Mouse Sphere",0.45)
local bringAllOnePosButton = createButton(itemsFrame,"Bring All of One Pos",0.55)
local loopBringButton = createButton(itemsFrame,"Loop Bring",0.65)

local yLevelBox = Instance.new("TextBox")
yLevelBox.Size = UDim2.new(0.15,0,0.05,0)
yLevelBox.Position = UDim2.new(0.3,0,0.75,0)--// Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera

--// GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ExampleGUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = game:GetService("CoreGui")

-- Outer frame
local outerFrame = Instance.new("Frame")
outerFrame.Size = UDim2.new(0.6, 0, 0.7, 0)
outerFrame.Position = UDim2.new(0.15, 0, 0.15, 0)
outerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
outerFrame.BorderSizePixel = 0
outerFrame.Parent = screenGui

-- Inner frame (renamed)
local itemsFrame = Instance.new("Frame")
itemsFrame.Size = UDim2.new(0.8, 0, 0.9, 0)
itemsFrame.Position = UDim2.new(0.199, 0.05, 0.1, 0)
itemsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
itemsFrame.Parent = outerFrame

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.12, 0, 0.05, 0)
toggleButton.Position = UDim2.new(0.44, 0, 0.85, 0)
toggleButton.Text = "Hide Frame"
toggleButton.TextColor3 = Color3.fromRGB(255,255,255)
toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggleButton.Parent = screenGui

toggleButton.MouseButton1Click:Connect(function()
    outerFrame.Visible = not outerFrame.Visible
    toggleButton.Text = outerFrame.Visible and "Hide Frame" or "Show Frame"
end)

-- Drag functionality
local dragging = false
local dragStart = Vector2.new()
local startPos = UDim2.new()

toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = toggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        local screenSize = toggleButton.Parent.AbsoluteSize
        toggleButton.Position = UDim2.new(
            startPos.X.Scale + delta.X / screenSize.X,
            0,
            startPos.Y.Scale + delta.Y / screenSize.Y,
            0
        )
    end
end)

-- Selected item label
local selectedLabel = Instance.new("TextLabel")
selectedLabel.Size = UDim2.new(0.38,0,0.08,0)
selectedLabel.Position = UDim2.new(0.45,0,0.05,0)
selectedLabel.Text = "Selected Item: None"
selectedLabel.TextColor3 = Color3.fromRGB(255,255,255)
selectedLabel.BackgroundColor3 = Color3.fromRGB(50,50,50)
selectedLabel.TextScaled = true
selectedLabel.TextWrapped = true
selectedLabel.Parent = itemsFrame

-- Left scrolling frame
local scrollFrameLeft = Instance.new("ScrollingFrame")
scrollFrameLeft.Size = UDim2.new(0.2,0,0.7,0)
scrollFrameLeft.Position = UDim2.new(0.48,0,0.15,0)
scrollFrameLeft.CanvasSize = UDim2.new(0,0,0,0)
scrollFrameLeft.ScrollBarThickness = 8
scrollFrameLeft.BackgroundColor3 = Color3.fromRGB(35,35,35)
scrollFrameLeft.Parent = itemsFrame

local listLayoutLeft = Instance.new("UIListLayout")
listLayoutLeft.SortOrder = Enum.SortOrder.LayoutOrder
listLayoutLeft.Padding = UDim.new(0,2)
listLayoutLeft.Parent = scrollFrameLeft

listLayoutLeft:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    scrollFrameLeft.CanvasSize = UDim2.new(0,0,0,listLayoutLeft.AbsoluteContentSize.Y)
end)

-- Right scrolling frame
local scrollFrameRight = Instance.new("ScrollingFrame")
scrollFrameRight.Size = UDim2.new(0.3,0,0.7,0)
scrollFrameRight.Position = UDim2.new(0.7,0,0.15,0)
scrollFrameRight.CanvasSize = UDim2.new(0,0,0,0)
scrollFrameRight.ScrollBarThickness = 8
scrollFrameRight.BackgroundColor3 = Color3.fromRGB(35,35,35)
scrollFrameRight.Parent = itemsFrame

local listLayoutRight = Instance.new("UIListLayout")
listLayoutRight.SortOrder = Enum.SortOrder.LayoutOrder
listLayoutRight.Padding = UDim.new(0,2)
listLayoutRight.Parent = scrollFrameRight

listLayoutRight:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    scrollFrameRight.CanvasSize = UDim2.new(0,0,0,listLayoutRight.AbsoluteContentSize.Y)
end)

-- Create buttons
local function createButton(text, posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.15,0,0.08,0)
    btn.Position = UDim2.new(0.3,0,posY,0)
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.BackgroundColor3 = Color3.fromRGB(80,80,80)
    btn.Parent = itemsFrame
    return btn
end

local bringAllButton = createButton("Bring All",0.15)
local bringOneButton = createButton("Bring One",0.25)
local bringAllItemButton = createButton("Bring All of Item",0.35)
local mouseSphereButton = createButton("Mouse Sphere",0.45)
local bringAllOnePosButton = createButton("Bring All of One Pos",0.55)
local loopBringButton = createButton("Loop Bring",0.65)

-- Y-level textbox
local yLevelBox = Instance.new("TextBox")
yLevelBox.Size = UDim2.new(0.15,0,0.05,0)
yLevelBox.Position = UDim2.new(0.3,0,0.75,0)
yLevelBox.PlaceholderText = "Y-Level Offset"
yLevelBox.Text = "5"
yLevelBox.ClearTextOnFocus = false
yLevelBox.TextColor3 = Color3.fromRGB(255,255,255)
yLevelBox.BackgroundColor3 = Color3.fromRGB(60,60,60)
yLevelBox.Parent = itemsFrame

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.15,0,0.08,0)
closeButton.Position = UDim2.new(0.85,0,0,0)
closeButton.Text = "Close"
closeButton.TextColor3 = Color3.fromRGB(255,255,255)
closeButton.BackgroundColor3 = Color3.fromRGB(80,80,80)
closeButton.Parent = outerFrame

closeButton.MouseButton1Click:Connect(function()
    if toggleButton then toggleButton:Destroy() end
    outerFrame:Destroy()
end)

-- Unified exclusion function
local function shouldExclude(model)
    if typeof(model) == "Instance" then
        if model:IsA("Model") and Players:FindFirstChild(model.Name) then
            return true
        end
        local exclusions = {"^model","^boulder","^smallrock","^mountain","^van","^car","^sedan","^trailer","^ramka","^perthyz","^border","^campsite","^cactus","^mutant"}
        local name = model.Name:lower()
        for _, ex in ipairs(exclusions) do
            if name:match(ex) then return true end
        end
    end
    return false
end

-- Helper function to move models
local function moveModelTo(model, position)
    for _, part in ipairs(model:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CFrame = CFrame.new(position)
        end
    end
end

-- Bring All
bringAllButton.MouseButton1Click:Connect(function()
    local character = LocalPlayer.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    for _, child in ipairs(scrollFrameRight:GetChildren()) do
        if child:IsA("TextLabel") then child:Destroy() end
    end
    for _, child in ipairs(scrollFrameLeft:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end

    local movedModels = {}
    for _, model in ipairs(workspace:GetChildren()) do
        if model:IsA("Model") and not shouldExclude(model) then
            moveModelTo(model, hrp.Position + Vector3.new(0,5,0))
            table.insert(movedModels, model.Name)
        end
    end

    if #movedModels > 0 then
        for _, name in ipairs(movedModels) do
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1,0,0,30)
            label.BackgroundTransparency = 1
            label.TextColor3 = Color3.fromRGB(255,255,255)
            label.TextScaled = true
            label.TextWrapped = true
            label.Text = name
            label.Parent = scrollFrameRight
        end
    else
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1,0,0,30)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.TextScaled = true
        label.TextWrapped = true
        label.Text = "No models were teleported."
        label.Parent = scrollFrameRight
    end
end)

-- Bring One
bringOneButton.MouseButton1Click:Connect(function()
    local selectedName = selectedLabel.Text:gsub("Selected Item: ","")
    if selectedName == "None" then return end
    local character = LocalPlayer.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local model = workspace:FindFirstChild(selectedName)
    if model and not shouldExclude(model) then
        moveModelTo(model, hrp.Position + Vector3.new(0,5,0))
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1,0,0,30)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.TextScaled = true
        label.TextWrapped = true
        label.Text = selectedName
        label.Parent = scrollFrameRight
    end
end)

-- Bring All of Item
bringAllItemButton.MouseButton1Click:Connect(function()
    local selectedName = selectedLabel.Text:gsub("Selected Item: ","")
    if selectedName == "None" then return end
    local character = LocalPlayer.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local count = 0
    for _, model in ipairs(workspace:GetChildren()) do
        if model:IsA("Model") and model.Name == selectedName and not shouldExclude(model) then
            moveModelTo(model, hrp.Position + Vector3.new(0,5,0))
            count = count + 1
        end
    end
    if count > 0 then
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1,0,0,30)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.TextScaled = true
        label.TextWrapped = true
        label.Text = selectedName.." x="..count
        label.Parent = scrollFrameRight
    end
end)

-- Update nearby items
local function updateNearbyItems()
    while itemsFrame.Parent do
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local hrp = character.HumanoidRootPart

            for _, child in ipairs(scrollFrameLeft:GetChildren()) do
                if child:IsA("TextButton") then child:Destroy() end
            end

            local modelCounts = {}
            for _, model in ipairs(workspace:GetChildren()) do
                if model:IsA("Model") and not shouldExclude(model) then
                    local closestPart = model:FindFirstChildWhichIsA("BasePart", true)
                    if closestPart and (closestPart.Position - hrp.Position).Magnitude <= 1000 then
                        modelCounts[model.Name] = (modelCounts[model.Name] or 0) + 1
                    end
                end
            end

            for modelName, count in pairs(modelCounts) do
                local btn = Instance.new("TextButton")
                btn.Size = UDim2.new(.9,0,0,50)
                btn.BackgroundColor3 = Color3.fromRGB(80,80,80)
                btn.TextColor3 = Color3.fromRGB(255,255,255)
                btn.TextScaled = true
                btn.TextWrapped = true
                btn.Text = modelName.."  x="..count
                btn.Parent = scrollFrameLeft
                btn.MouseButton1Click:Connect(function()
                    selectedLabel.Text = "Selected Item: "..modelName
                end)
            end
        end
        wait(1)
    end
end

spawn(updateNearbyItems)

-- Mouse spheres & bring to Y-level logic
local sphere, ySphere = nil, nil
local sphereLocked = false
local loopBring = false
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
raycastParams.IgnoreWater = true

mouseSphereButton.MouseButton1Click:Connect(function()
    if sphere and sphere.Parent then
        sphere:Destroy()
        sphere = nil
        if ySphere then ySphere:Destroy() ySphere = nil end
        sphereLocked = false
        loopBring = false
        mouseSphereButton.Text = "Mouse Sphere"
    else
        sphere = Instance.new("Part")
        sphere.Shape = Enum.PartType.Ball
        sphere.Size = Vector3.new(0.5,0.5,0.5)
        sphere.Color = Color3.fromRGB(0,170,255)
        sphere.Material = Enum.Material.Neon
        sphere.Anchored = true
        sphere.CanCollide = false
        sphere.CanQuery = false
        sphere.CanTouch = false
        sphere.Name = "MouseFollowerSphere"
        sphere.Parent = workspace

        ySphere = Instance.new("Part")
        ySphere.Shape = Enum.PartType.Ball
        ySphere.Size = Vector3.new(0.5,0.5,0.5)
        ySphere.Color = Color3.fromRGB(255,50,50)
        ySphere.Material = Enum.Material.Neon
        ySphere.Anchored = true
        ySphere.CanCollide = false
        ySphere.CanQuery = false
        ySphere.CanTouch = false
        ySphere.Name = "MouseFollowerYSphere"
        ySphere.Parent = workspace

        mouseSphereButton.Text = "Stop Sphere"
    end
end)

-- Sphere follow + loop bring
RunService.RenderStepped:Connect(function()
    if sphere and sphere.Parent and ySphere and ySphere.Parent and not sphereLocked then
        raycastParams.FilterDescendantsInstances = {sphere, ySphere}
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr.Character then
                table.insert(raycastParams.FilterDescendantsInstances, plr.Character)
            end
        end

        local mousePos = UserInputService:GetMouseLocation()
        local ray = Camera:ViewportPointToRay(mousePos.X, mousePos.Y)
        local rayResult = workspace:Raycast(ray.Origin, ray.Direction * 500, raycastParams)

        if rayResult then
            sphere.Position = rayResult.Position
        elseif sphere.Position then
            sphere.Position = sphere.Position
        else
            sphere.Position = Camera.CFrame.Position + Camera.CFrame.LookVector * 5
        end

        local yOffset = tonumber(yLevelBox.Text) or 5
        ySphere.Position = sphere.Position + Vector3.new(0,yOffset,0)
    end

    if loopBring then
        local selectedName = selectedLabel.Text:gsub("Selected Item: ","")
        if selectedName ~= "None" and ySphere and ySphere.Parent then
            for _, model in ipairs(workspace:GetChildren()) do
                if model:IsA("Model") and model.Name == selectedName and not shouldExclude(model) then
                    moveModelTo(model, ySphere.Position)
                end
            end
        end
    end
end)

-- Lock/unlock
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.P and sphere and sphere.Parent then
        sphereLocked = not sphereLocked
        mouseSphereButton.Text = sphereLocked and "Sphere Locked" or "Stop Sphere"
    end
end)

-- Bring all to Y-level
bringAllOnePosButton.MouseButton1Click:Connect(function()
    if not ySphere or not ySphere.Parent then return end
    local selectedName = selectedLabel.Text:gsub("Selected Item: ","")
    if selectedName == "None" then return end
    local targetPos = ySphere.Position
    local count = 0
    for _, model in ipairs(workspace:GetChildren()) do
        if model:IsA("Model") and model.Name == selectedName and not shouldExclude(model) then
            moveModelTo(model, targetPos)
            count = count + 1
        end
    end
    if count > 0 then
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1,0,0,30)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.TextScaled = true
        label.TextWrapped = true
        label.Text = selectedName.." x="..count
        label.Parent = scrollFrameRight
    end
end)

-- Loop Bring toggle
loopBringButton.MouseButton1Click:Connect(function()
    loopBring = not loopBring
    loopBringButton.Text = loopBring and "Stop Loop" or "Loop Bring"
end)

-- Create Items Button
local itemsButton = Instance.new("TextButton")
itemsButton.Name = "ItemsButton"
itemsButton.Text = "Items"
itemsButton.Size = UDim2.new(0, 100, 0, 30)
itemsButton.Position = UDim2.new(0, 0, 0, 0)
itemsButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
itemsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
itemsButton.Parent = outerFrame

-- Create Player Button
local playerButton = Instance.new("TextButton")
playerButton.Name = "PlayerButton"
playerButton.Text = "Player"
playerButton.Size = UDim2.new(0, 100, 0, 30)
playerButton.Position = UDim2.new(0, 110, 0, 0)
playerButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
playerButton.Parent = outerFrame

-- Create Player Frame
local playerFrame = Instance.new("Frame")
playerFrame.Name = "PlayerFrame"
playerFrame.Size = UDim2.new(0.8, 0, 0.9, 0)
playerFrame.Position = UDim2.new(0.199, 1, 1, 0)
playerFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
playerFrame.Parent = outerFrame
playerFrame.Visible = false

-- Button functionality
itemsButton.Activated:Connect(function()
    itemsFrame.Visible = true
    playerFrame.Visible = false
end)

playerButton.Activated:Connect(function()
    playerFrame.Visible = true
    itemsFrame.Visible = false
end)


yLevelBox.PlaceholderText = "Y-Level Offset"
yLevelBox.Text = "5"
yLevelBox.ClearTextOnFocus = false
yLevelBox.TextColor3 = Color3.fromRGB(255,255,255)
yLevelBox.BackgroundColor3 = Color3.fromRGB(60,60,60)
yLevelBox.Parent = itemsFrame

-- Create Player Frame (mirrors Items Frame layout)
local playerFrame = Instance.new("Frame")
playerFrame.Size = UDim2.new(0.8,0,0.9,0)
playerFrame.Position = UDim2.new(0.199,0,0.1,0)
playerFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
playerFrame.Parent = outerFrame
playerFrame.Visible = false

-- Player Frame UI
local playerLabel = Instance.new("TextLabel")
playerLabel.Size = UDim2.new(0.38,0,0.08,0)
playerLabel.Position = UDim2.new(0.45,0,0.05,0)
playerLabel.Text = "Player Info"
playerLabel.TextColor3 = Color3.fromRGB(255,255,255)
playerLabel.BackgroundColor3 = Color3.fromRGB(50,50,50)
playerLabel.TextScaled = true
playerLabel.TextWrapped = true
playerLabel.Parent = playerFrame

local playerScrollLeft = createScrollFrame(playerFrame, UDim2.new(0.2,0,0.7,0), UDim2.new(0.48,0,0.15,0))
local playerScrollRight = createScrollFrame(playerFrame, UDim2.new(0.3,0,0.7,0), UDim2.new(0.7,0,0.15,0))

-- Placeholder player buttons
createButton(playerFrame,"Teleport To Player",0.15)

-- Items / Player Toggle Buttons
local itemsButton = Instance.new("TextButton")
itemsButton.Size = UDim2.new(0,100,0,30)
itemsButton.Position = UDim2.new(0,0,0,0)
itemsButton.Text = "Items"
itemsButton.BackgroundColor3 = Color3.fromRGB(70,70,70)
itemsButton.TextColor3 = Color3.fromRGB(255,255,255)
itemsButton.Parent = outerFrame

local playerButton = Instance.new("TextButton")
playerButton.Size = UDim2.new(0,100,0,30)
playerButton.Position = UDim2.new(0,110,0,0)
playerButton.Text = "Player"
playerButton.BackgroundColor3 = Color3.fromRGB(70,70,70)
playerButton.TextColor3 = Color3.fromRGB(255,255,255)
playerButton.Parent = outerFrame

itemsButton.Activated:Connect(function()
    itemsFrame.Visible = true
    playerFrame.Visible = false
end)

playerButton.Activated:Connect(function()
    playerFrame.Visible = true
    itemsFrame.Visible = false
end)

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.15,0,0.08,0)
closeButton.Position = UDim2.new(0.85,0,0,0)
closeButton.Text = "Close"
closeButton.TextColor3 = Color3.fromRGB(255,255,255)
closeButton.BackgroundColor3 = Color3.fromRGB(80,80,80)
closeButton.Parent = outerFrame

closeButton.MouseButton1Click:Connect(function()
    if toggleButton then toggleButton:Destroy() end
    outerFrame:Destroy()
end)
